from sympy import *
# from sage.all import *

e=54892393232516430307774129901066204542071425907152316726416026148933923128893257656543852834369926996466695214390423952761427260691475154128231309737170879389672228565360992017498736185239749925157963148609734893330296993269086772442870340481327712486220656843435426698597350906366288316431685280009801589643
n=75214621032632598350953457290190220177672637690842875576560820475095860612973891134774272403429906457102549399721179651516155138644604168099307465627378602422379782943531403144541798722528913400327393398224705598752886237363487149522535736260358324666241908915604389404764944784006909575708791769991486774707
c=37484335903928695188085518637251022734713891288623974685867565212021793503551554875433688400665528344015170701312884528665285073865785114026602973501487780013505824229150448334113336242274401342759276031078568544568546092091440845420377869693445257452628963162375232930112911325325255709083804476702380074767
d=0

def cf_expansion(n, d):
    e = []

    q = n // d
    r = n % d
    e.append(q)

    while r != 0:
        n, d = d, r
        q = n // d
        r = n % d
        e.append(q)

    return e

def convergents(e):
    n = []
    d = []

    for i in range(len(e)):
        if i == 0:
            ni = e[i]
            di = 1
        elif i == 1:
            ni = e[i]*e[i-1] + 1
            di = e[i]
        else:
            ni = e[i]*n[i-1] + n[i-2]
            di = e[i]*d[i-1] + d[i-2]

        n.append(ni)
        d.append(di)
        yield (ni, di)

c_list = cf_expansion(e,n)

pc = convergents(c_list)

for pk, pd in pc:
    if pk == 0:
        continue
    pphi = (e*pd - 1)//pk

    p = Symbol('p', integer=True)
    roots = solve(p**2 + (pphi - n - 1)*p + n, p)
    if len(roots) == 2:
        pp, pq = roots
        if pp*pq == n:
            d=pd
            print(pd)

d=8129668150927448428161779772739579577962732011125362176025550024471632761907

# uc = power_mod(c,d,n) # Sage functions
# print(uc)


uc=198614235373674103788888306985643587194108045477674049828439422174745801853
hexs = ""

def decTohex(n):
	if (n == 0):
		return "0"
	r = n % 16;
	global hexs
	hexs = hexs + hex(r)[2:]
	n //= 16
	decTohex(n)

decTohex(uc)
hexs = hexs[::-1]
print(bytearray.fromhex(hexs).decode())
